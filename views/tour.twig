{% extends 'layout.twig' %}

{% set INTERVAL = 99999999 %}
{% set SC_ADDRESS = "0x43e8adba6025c844519d912057d742086f5cd0b8" %}
{% set SC_FUNC_ID = "93450cc1" %}

{% block stylesheets %}
  {{ parent() }}
  <style>
    /* horizontally and vertically center align divs */
    .center-translate {
        position: relative;
        float: left;
        top: 50%;
        left: 50%;
        transform: translate(-50%,-50%);
    }
    #carouselExampleControls {
      height: 90vh;
    }
    .carousel-control-prev, .carousel-control-next {
      height: 60px;
      margin-top: auto;
    }
    .carousel-inner {
      height: 100%;
    }
    .carousel-item {
      height: 100%;
      background-color: #AAA;
    }
    .disabled {
      cursor: not-allowed!important;
      pointer-events: auto!important;
    }
    #user-console {
      border-width:5px;  
      border-style:inset;
      background-color: #000;
      color: chartreuse;
      vertical-align: bottom;
      overflow-y: scroll;
      height: 200px;
    }
    #user-console .console-row {
      margin-top: 0;
      margin-bottom: 0;
    }
    #user-console .console-row.error {
      color: tomato;
    }
    #user-console .console-row::before {
      content: "> ";
    }
  </style>
{% endblock %}

{% block scripts %}
  {{ parent() }}
  <script src="https://cdn.jsdelivr.net/npm/web3@1.2.6/dist/web3.min.js"></script>
  <script charset="utf-8"
        src="https://cdn.ethers.io/scripts/ethers-v4.min.js"
        type="text/javascript">
  </script>

  <script>
    var $carousel = $('.carousel');
    var hash = $(location).attr('hash');
    if (hash == "#service") {$carousel.carousel(4);}
    $carousel.carousel("pause");

    const SC_ADDRESS = "{{SC_ADDRESS}}";
    const SC_FUNC_ID = "{{SC_FUNC_ID}}";
    const RPC_PROVIDER = "https://ropsten.infura.io/v3/4dea9169133246318e58fe7ac1bdbdef";
    const web3 = new Web3(new Web3.providers.HttpProvider(RPC_PROVIDER));
    const abiCoder = new ethers.utils.AbiCoder();

    var $newWallet = $('#new-wallet-btn');
    var $customWallet = $('#sync-wallet-btn');
    var $walletSection = $("#wallet-section");
    var $walletAddress = $("#wallet-address");
    var $walletBalance = $("#wallet-balance");
    var $walletRefresh = $("#wallet-refresh");
    var $checkEtherscan = $("#check-on-etherscan");
    var $mainForm = $("#main-form");
    var $getPayed = $("#get-payed");
    var $userConsole = $("#user-console");
    var myPk;

    function userConsoleLog(html,err = false) {
      let $x = $('<p class="console-row"></p>');
      $x.html(html);
      $userConsole.append($x);
      $userConsole.animate({ scrollTop: $userConsole.prop("scrollHeight")}, 1000);
      if (err){
        $x.addClass("error");
      }
    }

    $getPayed.on('click', async() => {
      if (! myPk || $walletAddress.text() == "ND") {
        userConsoleLog("Select an address where you want to get payed",true);
        return
      }
      // get data from the form and add the address
      let fd = marshalMainForm();
      if (!fd.ether || !fd.country) {
        userConsoleLog("Select country and write the eth amount",true);
        return
      }
      fd.address = $walletAddress.text();

      $getPayed.html('<i class="fa fa-spinner"></i>')
      let params = {
        to : SC_ADDRESS,
        chainId: web3.utils.toHex(3),
        from: fd.address,
        gas: web3.utils.toHex(50000), // doesnt really matter. Must just pass web3 checks
        data: "0x" + SC_FUNC_ID + abiCoder.encode(
            ["address","uint256"],
            [fd.country,web3.utils.toHex(parseInt(web3.utils.toWei(fd.ether,"ether")))]
          ).substring(2)
      }


      userConsoleLog("building tx with params: " + (JSON.stringify(params).replace(/,/g,", ")));
      let tx;
      await web3.eth.accounts.signTransaction(params,
        myPk
      ).then((obj)=>{
        tx=obj;

        let api_uri = "publish-tx?rawTx=" + tx.rawTransaction;
        userConsoleLog("contacting the publisher via api @ " + api_uri.substring(0,32) + "...");
        $.get(
          api_uri,
          function(result){
            if (result.result.publishing) {
              userConsoleLog(`<b>Success!</b> your transaction is being published on the blockchain by the publisher. You will soon get updates.`);
            } else {
              userConsoleLog("<b>Failure</b> your transaction won't be published. Errors will follow:",true);
              for (let i = 0; i < result.result.errors.length; i++) {
                const err = result.result.errors[i];
                userConsoleLog("&nbsp;&nbsp;&nbsp;&nbsp;" + err,true);
              }
            }
          }
        )
      })
       .catch((err)=>{userConsoleLog(err.toString(),true);})
       .finally(()=>{$getPayed.html('Pay!')});
    });

    function disable($obj,v = true){
      if(v){
        $obj.prop("disabled",true);
        $obj.addClass("disabled");
      } else {
        $obj.prop("disabled",false);
        $obj.removeClass("disabled");
      }
      if (myPk && web3.utils.isAddress($walletAddress.text())) {
        $getPayed.prop("disabled",false);
        $getPayed.removeClass("disabled");
      } else {
        $getPayed.prop("disabled",true);
        $getPayed.addClass("disabled");
      }
    }

    function marshalMainForm(){
      let paramObj = {};
      $.each($mainForm.serializeArray(), function(_, kv) {
        paramObj[kv.name] = kv.value;
      });
      return paramObj
    }

    function turnOnCustom() {
      $customWallet.removeClass('btn-warning').addClass('btn-success');
      $newWallet.removeClass('btn-success').addClass('btn-warning');
    }

    function turnOnNew() {
      $newWallet.removeClass('btn-warning').addClass('btn-success');
      $customWallet.removeClass('btn-success').addClass('btn-warning');
    }

    function showWallet(addr,callback){
      $walletSection.addClass("bg-warning");
      $walletAddress.text(addr);
      $walletBalance.text("");
      $walletBalance.html('<i class="fa fa-spinner"></i>')
      web3.eth.getBalance(addr).then(function(balance){
        userConsoleLog("refreshing wallet balance");
        $walletBalance.text(balance);
        $walletSection.removeClass("bg-warning");
        if(callback !== undefined){callback()}
      })
    }

    function pk2Wallet(pk,callback){
      let acc = web3.eth.accounts.privateKeyToAccount(pk);
      showWallet(acc.address,callback);
      if (acc && acc.privateKey){
        myPk = acc.privateKey;
        userConsoleLog("selected wallet private key with addr: " + acc.address.substring(0,8) + "...");
        disable($walletRefresh,false);
        disable($checkEtherscan,false);
        $checkEtherscan.prop("href",`https://ropsten.etherscan.io/address/${acc.address}`);
      } else {
        disable($walletRefresh,true);
        disable($checkEtherscan,true);
      }
    }

    $walletRefresh.on("click",function(){
      pk2Wallet(myPk);
    });

    $newWallet.on("click",function(){
      userConsoleLog("generating new wallet private key");
      let acc = web3.eth.accounts.create();
      pk2Wallet(
        acc.privateKey,
        function() {turnOnNew();}
      )
    })
  </script>
{% endblock %}

{% block content %}
  <div id="carouselExampleControls" class="carousel slide" data-ride="carousel">
    <div class="carousel-inner center-translate">
      <div class="carousel-item active" data-interval="{{INTERVAL}}">
        <div class="center-translate text-center">
          <h1>Let's imagine we're an organization fighting poverty</h1>
          <h1>Let's imagine we want to do our job using a Smart Contract (SC)</h1>
        </div>
      </div>
      <div class="carousel-item" data-interval="{{INTERVAL}}">
        <div class="center-translate text-center">
          <h1>Let's imagine SC has a method to pay back the user who raised it.</h1>
          <h1>We'll call this method: "payBack"</h1>
        </div>  
      </div>
      <div class="carousel-item" data-interval="{{INTERVAL}}">
        <div class="center-translate pl-5">
          <h3>Add some requirements to our crazy logic:
            <ul>
              <li>The maximum amount that can be payed back will be
                <ul>
                  <li>5 <i>ETH</i> for people from country A.</li>
                  <li>2.5 <i>ETH</i> for people from country B.</li>
                  <li>0.5 <i>ETH</i> for everyone else.</li>
                </ul>
            </ul>
          </h3>
        </div>  
      </div>
      <div class="carousel-item" data-interval="{{INTERVAL}}">
        <div class="center-translate text-center">
          <h1>
            To grant people to be payed even if they own 0 <i>ETH</i> we built a shocking service!
            <i class="fa fa-child"></i>
          </h1>
        </div>  
      </div>
      <div class="carousel-item" data-interval="{{INTERVAL}}">
        <div class="center-translate w-75">
          <i>This example makes use of the ropsten test network.</i>
          <div id="user-console" class="my-2">
            <p class="console-row">Welcome: please pick an address, select recipient and amount, then <b>pay!</b></p>
          </div>
          <form class="" id="main-form">
            <div class="form-group">
              <label for="country">Recipient Address</label>
              <input name="country" type="text" class="form-control form-control-lg" id="country" placeholder="paste recipient address 0x..." required>
              {# <select name="country" class="form-control form-control-lg" id="country" required>
                <option selected disabled value="">Select country...</option>
                <option value="1">A</option>
                <option value="2">B</option>
                <option value="3">C</option>
                <option value="4">D</option>
                <option value="0">Other</option>
              </select> #}
            </div>
            <div class="form-group">
              <label for="address">How many ETH do you need?</label>
              <input name="ether" type="number" class="form-control form-control-lg" id="ether" placeholder="2.34567" required>
            </div>
            <button class="btn btn-primary disabled" id="get-payed" type="button" disabled>Pay!</button>
          </form>
          <hr/>
          <div class="w-100 d-flex">
            <button class="btn btn-warning mr-auto" id="new-wallet-btn">
              Create a fresh new wallet
            </button>
            <div class="btn-group ml-auto">
              <button id="sync-wallet-btn" class="btn btn-warning dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Use a custom Private Key
              </button>
              <div class="dropdown-menu">
                <a class="dropdown-item bg-success" href="#" data-pk="0x0689b0f63ff393cdc1085e3acef85a3d8334b98a2c32ac294f623245a2814674" onclick="pk2Wallet($(this).attr('data-pk'),function(){turnOnCustom();});">Whitelisted [1]</a>
                <a class="dropdown-item bg-success" href="#" data-pk="0x64cc5e6db47fd9b3de42856546f8f1b682660e67f5b1fe91c8a4fb797eb9a79f" onclick="pk2Wallet($(this).attr('data-pk'),function(){turnOnCustom();});">Whitelisted [2]</a>
                <a class="dropdown-item bg-success" href="#" data-pk="0x6c9bf9127fc4f978e0d4350d7f5db93a9458f807e97b195d5ab9e092d391d978" onclick="pk2Wallet($(this).attr('data-pk'),function(){turnOnCustom();});">Whitelisted [3]</a>
                <div class="dropdown-divider"></div>
                <a class="dropdown-item bg-danger" href="#" data-pk="0xffd65b9d6efcac604b5473d39c13c1b2c5f55f5c86a2fb61e3ccd713274b11bb" onclick="pk2Wallet($(this).attr('data-pk'),function(){turnOnCustom();});">Not Whitelisted [1]</a>
                <a class="dropdown-item bg-danger" href="#" data-pk="0xfcdf054274554ecf4adbfa97ea64dc4236a4fb62f015d41016dbe2f9c1c7db1f" onclick="pk2Wallet($(this).attr('data-pk'),function(){turnOnCustom();});">Not Whitelisted [2]</a>
                <a class="dropdown-item bg-danger" href="#" data-pk="0x59c8119ea2748468a60c2893d4ea08c4c941ef60a13101ae5b537367701dec64" onclick="pk2Wallet($(this).attr('data-pk'),function(){turnOnCustom();});">Not Whitelisted [3]</a>
              </div>
            </div>
          </div>
          <div class="mt-4 bg-warning" id="wallet-section">
            <div class="w-50">
              <h5>Your address is: <p><b><span id="wallet-address">ND</span></b></h5></p>
              <h5>Your balance is: <b><span id="wallet-balance">ND</span></b></h5>
            </div>
          </div>
          <button class="btn btn-secondary disabled" id="wallet-refresh" disabled>Refresh Balance</button>
          <a class="btn btn-secondary disabled" id="check-on-etherscan" href="" disabled target="_etherscan">Check on Etherscan</a>
          <a class="btn btn-secondary" id="check-sc" target="_etherscan" href="https://ropsten.etherscan.io/address/{{SC_ADDRESS}}" data-tooltip="Check the smart contract">Check SC</a>
        </div>  
      </div>
    </div>
    <a class="carousel-control-prev" href="#carouselExampleControls" role="button" data-slide="prev">
      <span class="carousel-control-prev-icon" aria-hidden="true"></span>
      <span class="sr-only">Previous</span>
    </a>
    <a class="carousel-control-next" href="#carouselExampleControls" role="button" data-slide="next">
      <span class="carousel-control-next-icon" aria-hidden="true"></span>
      <span class="sr-only">Next</span>
    </a>
  </div>
{% endblock %}
